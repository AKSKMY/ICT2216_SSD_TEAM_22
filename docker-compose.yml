
services:
  # ───────────────────────────────────────────────────────────────────────
  # MySQL 8.0 service (named "db")
  # ───────────────────────────────────────────────────────────────────────
  db:
    image: mysql:8.0

    ports:
      - "3306:3306"

    networks:
      - app_net

    environment:
      #! TO CHANGE ROOT PASSWORD UPON FINALISING
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: rbac
      #! NORMAL USER CREDENTIALS
      MYSQL_USER: appuser
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_app_password
      
    # Only one "volumes:" block—do not repeat this key twice
    volumes:
      - db_data:/var/lib/mysql
      - ./Database/schema_script.sql:/docker-entrypoint-initdb.d/01_rbac_schema.sql
      - ./Database/critical.sql:/docker-entrypoint-initdb.d/02_critical_schema.sql
      - ./Database/data_population.sql:/docker-entrypoint-initdb.d/03_data_population.sql
    secrets:
      - mysql_root_password
      - mysql_app_password
    deploy:
      restart_policy:
        condition: on-failure

  # ───────────────────────────────────────────────────────────────────────
  # Flask + Gunicorn service
  # ───────────────────────────────────────────────────────────────────────
  flask_app:
    image: akskmy/ssd_flask_app:v5
    depends_on:
      - db

    networks:
      - app_net

    ports:
      - "5000:5000"

    environment:
      - FLASK_ENV=production
      - FLASK_SECRET_KEY=Your_Very_Strong_Secret_Key_MEDIVAULT!
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD_FILE=/run/secrets/mysql_root_password
      - DB_NAME=rbac
      - RECAPTCHA_SITE_KEY_FILE=/run/secrets/RECAPTCHA_SITE_KEY
      - RECAPTCHA_SECRET_KEY_FILE=/run/secrets/RECAPTCHA_SECRET_KEY
      - KEK_MASTER_KEY=/run/secrets/kek_master_key

    secrets:
      - mysql_app_password
      - RECAPTCHA_SITE_KEY
      - RECAPTCHA_SECRET_KEY
      - kek_master_key

    deploy:
      restart_policy:
        condition: on-failure

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"

    networks:
      - app_net

    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt  # Mount Let's Encrypt certificates directory
    depends_on:
      - flask_app

volumes:
  db_data:

networks:
  app_net:
    driver: overlay

secrets:
  # secret created externally in the swarm:
  mysql_root_password:
    external: true

  mysql_app_password:
    external: true

  RECAPTCHA_SITE_KEY:
    external: true

  RECAPTCHA_SECRET_KEY:
    external: true
