name: Deploy to EC2 via Docker

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: akskmy/ssd_flask_app:latest

    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd project/compose                  # Move to your project directory

          git pull                            # Pull the latest code from your repo
          sleep 2

          sudo docker build -t akskmy/ssd_flask_app:latest .    # Rebuild your Flask app image
          sudo docker push akskmy/ssd_flask_app:latest          # Push it to Docker Hub
          sleep 5

          sudo docker stop $(sudo docker ps -q)                 # Stop all running containers
          sleep 5

          sudo docker stack rm my_stack                         # Remove the running stack
          sleep 10 

          sudo docker volume rm my_stack_db_data compose_db_data db_data   # Remove DB volumes to clear existing data
          sleep 5
          
          sudo docker network rm my_stack_app_net               # Remove custom network (optional if recreated)
          sleep 5

          sudo docker stack deploy -c docker-compose.yml my_stack   # Redeploy the stack
          sleep 10


