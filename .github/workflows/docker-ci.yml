name: Docker-Compose CI

# 1) Trigger on pushes or PRs to main (adjust branch as needed)
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 2) Get the code
      - name: Checkout code
        uses: actions/checkout@v2

      # 3) Set up Docker Buildx (enables parallel builds, caching, etc.)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 4) Build all your services in docker-compose.yml
      - name: Build containers
        run: docker-compose -f docker-compose.yml build --parallel

      # 5) Bring up the stack in detached mode
      - name: Start services
        run: docker-compose -f docker-compose.yml up -d

      # 6) Smoke-test your Flask app (adjust port/path as appropriate)
      - name: Smoke test Flask
        run: |
          # give the container a few seconds to be ready
          until curl --output /dev/null --silent --head --fail http://localhost:5000/; do
            echo "Waiting for Flaskâ€¦"
            sleep 5
          done
          echo "Flask is responding!"

      # OPTIONAL: Run your test suite inside the flask_app container
      # Assumes you have pytest or unittest installed in your image.
      - name: Run backend tests
        run: docker-compose run --rm flask_app python -m unittest discover

      # 7) Tear down everything
      - name: Tear down
        run: docker-compose -f docker-compose.yml down --volumes
