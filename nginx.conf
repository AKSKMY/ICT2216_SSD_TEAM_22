# HTTP server configuration to redirect HTTP traffic to HTTPS
server {
    listen 80 default_server;
    server_name medivault.zapto.org;  # Replace with your domain

    # Redirect all HTTP traffic to HTTPS
    #  return 301 https://$host$request_uri;
   location / {
	   proxy_pass http://flask_app:5000;
	   proxy_set_header Host $host;
	   proxy_set_header X-Real-IP $remote_addr;
	   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	   proxy_set_header X-Forwarded-Proto $scheme;
   }

# HTTPS server configuration
#server {
#   listen 443 ssl;
#   server_name medivault.zapto.org;  # Replace with your domain

    # Path to SSL certificates
#   ssl_certificate /etc/letsencrypt/live/medivault.zapto.org/fullchain.pem;  # Replace with your certificate path
#   ssl_certificate_key /etc/letsencrypt/live/medivault.zapto.org/privkey.pem;  # Replace with your key path
#   ssl_session_cache shared:SSL:1m;
#   ssl_session_timeout  5m;
    
    # Strong SSL settings (modify as per your needs)
#   ssl_protocols TLSv1.2 TLSv1.3;
#   ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
#   ssl_prefer_server_ciphers on;

    # NGINX Reverse Proxy settings
    #   location / {
    #   proxy_pass http://flask_app:5000;  # Forward requests to Flask (Gunicorn)
    #   proxy_set_header Host $host;
    #   proxy_set_header X-Real-IP $remote_addr;
    #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #   proxy_set_header X-Forwarded-Proto $scheme;
  }

    # Optional: Configure security headers
    #   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#}
